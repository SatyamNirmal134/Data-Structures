import java.util.Scanner;
class MaxHeap
{
public void sort(int arr[])
{
int n=arr.length;
for(int i=n/2-1;i>=0;i--)
{
heapify(arr,n,i);
}
for(int i=n-1;i>=0;i--)
{
 int temp=arr[0];
 arr[0]=arr[i];
 arr[i]=temp;
heapify(arr,i,0);
}
}
private void heapify(int arr[],int n,int i)
{
int largest=i;
int l=(2*i)+1;
int r=(2*i)+2;
if(l<n && arr[l]>arr[largest])
{
largest=l;
}
if(r<n && arr[r]>arr[largest])
{
largest=r;
}
if(largest!=i)
{
int swap=arr[largest];
arr[largest]=arr[i];
arr[i]=swap;
heapify(arr,n,largest);

}
}
}
class MinHeap
{
public void sort(int arr[])
{
int n=arr.length;
for(int i=n/2-1;i>=0;i--)
{
heapify(arr,n,i);
}
for(int i=n-1;i>=0;i--)
{
 int temp=arr[0];
 arr[0]=arr[i];
 arr[i]=temp;
heapify(arr,i,0);
}
}
private void heapify(int arr[],int n,int i)
{
int largest=i;
int l=(2*i)+1;
int r=(2*i)+2;
if(l<n && arr[l]<arr[largest])
{
largest=l;
}
if(r<n && arr[r]<arr[largest])
{
largest=r;
}
if(largest!=i)
{
int swap=arr[largest];
arr[largest]=arr[i];
arr[i]=swap;
heapify(arr,n,largest);

}
}
}
class HeapSort
{
public static void main(String []args)
{
MaxHeap m=new MaxHeap();
MinHeap min=new MinHeap();
Scanner s=new Scanner(System.in);
System.out.println("Enter the size of array-");
int n=s.nextInt();
int arr[]=new int[n];
System.out.println("Enter the elements-");
for(int i=0;i<n;i++)
{
arr[i]=s.nextInt();
}
System.out.println("Enter your choice\n1.Max Heap\n2.Min Heap");
int ch=s.nextInt();
switch(ch)
{
case 1:
       m.sort(arr);
       System.out.println("Sorted array is-");
       for(int i=0;i<n;i++)
        {
           System.out.print(arr[i]+" ");
        }
       break;
case 2:
       min.sort(arr);
       System.out.println("Sorted array is-");
       for(int i=0;i<n;i++)
        {
           System.out.print(arr[i]+" ");
        }
       break;

}
}
}
